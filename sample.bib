@inproceedings{Allaho2014,
abstract = {We conduct an extensive analysis on the developers of Open Source Software (OSS) projects. Our goal is to discover trends that govern the developers' behavior in contributing to OSS projects. To achieve our goal, we define and analyze a set of developer and OSS project features. Moreover, we study the behavior of the developers on selecting OSS projects to participate in by analyzing the project features that dictate the developers' selection. In addition, we study the difference between developers who seek a job and who do not seek a job in developing social ties. We, also, analyze the developers' affiliation (e.g., corporate, university, Institute, etc.) and location (e.g., city) statistics. It is found that a significant ratio of developers share the same affiliation and location in a team for a project that is being developed by remote collaborators. We use a dataset collected from Github.com, which is one of the most fast-growing and large-scale online OSS community. This study is substantial for future works of recommender systems targeting the OSS community.},
author = {Allaho, Mohammad Y. and Lee, Wang-Chien},
booktitle = {2014 International Conference on Behavioral, Economic, and Socio-Cultural Computing (BESC2014)},
doi = {10.1109/BESC.2014.7059515},
file = {:Users/seocam/Documents/Mendeley/2014/Allaho, Lee/Allaho, Lee\_2014\_Trends and behavior of developers in open collaborative software projects.pdf:pdf},
isbn = {978-1-4799-6980-7},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
month = oct,
pages = {1--7},
publisher = {IEEE},
title = {{Trends and behavior of developers in open collaborative software projects}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84926442714\&partnerID=tZOtx3y1},
year = {2014}
}
@article{Choi2013,
author = {Choi, J and Moon, Jy and Hahn, J and Kim, J},
doi = {10.1145/2441955.2441989},
file = {:Users/seocam/Documents/Mendeley/2013/Choi et al/Choi et al.\_2013\_Herding in open source software development an exploratory study.pdf:pdf},
isbn = {9781450313322},
journal = {CSCW conf.},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
pages = {129--133},
title = {{Herding in open source software development: an exploratory study}},
url = {http://dl.acm.org/citation.cfm?id=2441989},
year = {2013}
}
@article{Corneli2010,
author = {Corneli, Joseph},
file = {:Users/seocam/Documents/Mendeley/2010/Corneli/Corneli\_2010\_GravPad.pdf:pdf},
isbn = {9781450300568},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
pages = {6--7},
title = {{GravPad}},
year = {2010}
}
@article{Crowston2006,
abstract = {Information systems success is one of the most widely used dependent variables in information systems (IS) research, but research on free/libre and open source software (FLOSS) often fails to appropriately conceptualize this important concept. In this article, we reconsider what success means within a FLOSS context. We first review existing models of IS success and success variables used in FLOSS research and assess them for their usefulness, practicality and fit to the FLOSS context. Then, drawing on a theoretical model of group effectiveness in the FLOSS development process, as well as an on-line discussion with developers, we present additional concepts that are central to an appropriate understanding of success for FLOSS. In order to examine the practicality and validity of this conceptual scheme, the second half of our article presents an empirical study that demonstrates operationalizations of the chosen measures and assesses their internal validity. We use data from SourceForge to measure the project's effectiveness in team building, the speed of the project at responding to bug reports and the project's popularity. We conclude by discussing the implications of this study for our proposed extension of IS success in the context of FLOSS development and highlight future directions for research. Copyright © 2006 John Wiley \& Sons, Ltd.},
author = {Crowston, Kevin and Howison, James and Annabi, Hala},
doi = {10.1002/spip.259},
file = {:Users/seocam/Documents/Mendeley/2006/Crowston, Howison, Annabi/Crowston, Howison, Annabi\_2006\_Information systems success in free and open source software development Theory and measures.pdf:pdf},
isbn = {1099-1670},
issn = {10774866},
journal = {Software Process Improvement and Practice},
keywords = {Concept development,Free/libre open source software,Information systems success,Survival analysis,cscw,spb},
mendeley-tags = {cscw,spb},
number = {2},
pages = {123--148},
title = {{Information systems success in free and open source software development: Theory and measures}},
volume = {11},
year = {2006}
}
@article{Dabbish2012,
author = {Dabbish, Laura and Stuart, Colleen and Tsay, Jason and Herbsleb, Jim},
doi = {10.1145/2145204.2145396},
file = {:Users/seocam/Documents/Mendeley/2012/Dabbish et al/Dabbish et al.\_2012\_Social coding in GitHub- transparency and collaboration in an open software repository.pdf:pdf},
isbn = {978-1-4503-1086-4},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
pages = {1277--1286},
title = {{Social coding in GitHub- transparency and collaboration in an open software repository}},
year = {2012}
}
@article{German2015,
abstract = {Distributed version control systems (D-VCSs —such as git and mercurial) and their hosting services (such as Github and Bitbucket) have revolutionalized the way in which developers collaborate by allowing them to freely exchange and integrate code changes in a peer-to-peer fashion. However, this flexibility comes at a price: code changes are hard to track because of the proliferation of code repositories and because developers modify (“rebase”) and filter (“cherry-pick”) the history of these changes to streamline their integration into the repositories of other developers. As a consequence, researchers and practitioners, who typically only consider the (cleaned up) history in the official project repository, are unaware of important elements and activities in the collaborative software development process. In this paper, we present a method that continuously mines all known D-VCSs of a software project to uncover the complete development history of a project. We use this method to (1) show the divergence between the code history development in the official Linux kernel repository and the complete kernel development history, and (2) to investigate the characteristics of the ecosystem of git repositories of the Linux kernel. Finally, we discuss how continuous mining could be adopted by current D-VCS hosting services.},
author = {German, Daniel M. and Adams, Bram and Hassan, Ahmed E.},
doi = {10.1007/s10664-014-9356-2},
file = {:Users/seocam/Documents/Mendeley/2015/German, Adams, Hassan/German, Adams, Hassan\_2015\_Continuously mining distributed version control systems an empirical study of how Linux uses Git.pdf:pdf},
issn = {1382-3256},
journal = {Empirical Software Engineering},
keywords = {Distributed version control,Empirical software engineering,Linux,Measuring bias,Mining software repositories,Open source development,Rebasing,cscw,spb},
mendeley-tags = {cscw,spb},
month = mar,
publisher = {Kluwer Academic Publishers},
title = {{Continuously mining distributed version control systems: an empirical study of how Linux uses Git}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84924229014\&partnerID=tZOtx3y1},
year = {2015}
}
@inproceedings{Lima2014,
abstract = {GitHub is the most popular repository for open source code (Finley 2011). It has more than 3.5 million users, as the company declared in April 2013, and more than 10 million repositories, as of December 2013. It has a publicly accessible API and, since March 2012, it also publishes a stream of all the events occurring on public projects. Interactions among GitHub users are of a complex nature and take place in different forms. Developers create and fork repositories, push code, approve code pushed by others, bookmark their favorite projects and follow other developers to keep track of their activities. In this paper we present a characterization of GitHub, as both a social network and a collaborative platform. To the best of our knowledge, this is the first quantitative study about the interactions happening on GitHub. We analyze the logs from the service over 18 months (between March 11, 2012 and September 11, 2013), describing 183.54 million events and we obtain information about 2.19 million users and 5.68 million repositories, both growing linearly in time. We show that the distributions of the number of contributors per project, watchers per project and followers per user show a power-law-like shape. We analyze social ties and repository-mediated collaboration patterns, and we observe a remarkably low level of reciprocity of the social connections. We also measure the activity of each user in terms of authored events and we observe that very active users do not necessarily have a large number of followers. Finally, we provide a geographic characterization of the centers of activity and we investigate how distance influences collaboration.},
author = {Lima, Antonio and Rossi, Luca and Musolesi, Mirco},
booktitle = {Proceedings of the 8th International Conference on Weblogs and Social Media, ICWSM 2014},
file = {:Users/seocam/Documents/Mendeley/2014/Lima, Rossi, Musolesi/Lima, Rossi, Musolesi\_2014\_Coding together at scale GitHub as a collaborative social network.pdf:pdf},
isbn = {9781577356578},
keywords = {cscw,spb},
mendeley-groups = {CSCW},
mendeley-tags = {cscw,spb},
pages = {295--304},
publisher = {The AAAI Press},
title = {{Coding together at scale: GitHub as a collaborative social network}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84909956490\&partnerID=tZOtx3y1},
year = {2014}
}
@article{Loyola2012,
abstract = {The evolution of the Web has allowed the generation of several platforms for collaborative work. One of the main contributors to these advances is the Open Source initiative, in which projects are boosted to a new level of interaction and cooperation that improves their software quality and reliability. In order to understand how the group of contributors interacts with the software under development, we propose a novel methodology that adapts Lotka-Volterra-based biological models used for host-parasite interaction. In that sense, we used the concept mutualism from social parasites. Preliminary results based on experiments on the Github collaborative platform showed that Open Source phenomena can be modeled as a mutualistic system, in terms of the evolution of the population of developers and repositories.},
author = {Loyola, Pablo and Ko, In-Young},
doi = {10.1109/WI-IAT.2012.228},
file = {:Users/seocam/Documents/Mendeley/2012/Loyola, Ko/Loyola, Ko\_2012\_Biological Mutualistic Models Applied to Study Open Source Software Development.pdf:pdf},
isbn = {9781467360579, 1467360570},
journal = {2012 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology},
keywords = {cscw,open source software development,population models,spb,web-based collaborative work},
mendeley-tags = {cscw,spb},
pages = {248--253},
title = {{Biological Mutualistic Models Applied to Study Open Source Software Development}},
volume = {1},
year = {2012}
}
@article{Majumder2012,
abstract = {In a team formation problem, one is required to find a group of users that can match the requirements of a collaborative task. Example of such collaborative tasks abound, ranging from software product development to various participatory sensing tasks in knowledge creation. Due to the nature of the task, team members are often required to work on a co- operative basis. Previous studies [1, 2] have indicated that co-operation becomes effective in presence of social connec- tions. Therefore, effective team selection requires the team members to be socially close as well as a division of the task among team members so that no user is overloaded by the assignment. In this work, we investigate how such teams can be formed on a social network. Since our team formation problems are proven to be NP- hard, we design efficient approximate algorithms for finding near optimum teams with provable guarantees. As tradi- tional data-sets from on-line social networks (e.g. Twitter, Facebook etc) typically do not contain instances of large scale collaboration, we have crawled millions of software repositories spanning a period of four years and hundreds of thousands of developers from GitHub, a popular open-source social coding network. We perform large scale experiments on this data-set to evaluate the accuracy and efficiency of our algorithms. Experimental results suggest that our algo- rithms achieve significant improvement in finding effective teams, as compared to naive strategies and scale well with the size of the data. Finally, we provide a validation of our techniques by comparing with existing software teams.},
archivePrefix = {arXiv},
arxivId = {arXiv:1205.3643v1},
author = {Majumder, Anirban and Datta, Samik and Naidu, K.V.M.},
doi = {10.1145/2339530.2339690},
eprint = {arXiv:1205.3643v1},
file = {:Users/seocam/Documents/Mendeley/2012/Majumder, Datta, Naidu/Majumder, Datta, Naidu\_2012\_Capacitated team formation problem on social networks.pdf:pdf},
isbn = {9781450314626},
journal = {Proceedings of the 18th ACM SIGKDD international conference on Knowledge discovery and data mining - KDD '12},
keywords = {capacity,cscw,social networks,spb,team formation},
mendeley-tags = {cscw,spb},
pages = {1005},
title = {{Capacitated team formation problem on social networks}},
url = {http://dl.acm.org/citation.cfm?doid=2339530.2339690},
year = {2012}
}
@inproceedings{Marlow2013,
abstract = {Social networking tools now allow professionals to post and share their work in online spaces. These professionals build reputation within a community of practice, often with the goal of finding a job. But how are the visible traces of their actions and interactions in online workspaces used in the hiring process? We conducted interviews with members of the GitHub "social coding" community to understand how profiles on the site are used to assess people during recruitment and hiring for software development positions. Both employers and job seekers pointed to specific cues provided on profiles that led them to make inferences (or form impressions) about a candidate's technical skills, motivations, and values. These cues were seen as more reliable indicators of technical abilities and motivation than information provided on a resume, because of the transparency of work actions on GitHub and relative difficulty of manipulating behavior traces. The use of online workspaces like GitHub has implications for the type of information sought by employers as well as the activity traces job hunters might seek to leave. Copyright 2013 ACM.},
address = {New York, New York, USA},
author = {Marlow, Jennifer and Dabbish, Laura},
booktitle = {Proceedings of the 2013 conference on Computer supported cooperative work - CSCW '13},
doi = {10.1145/2441776.2441794},
file = {:Users/seocam/Documents/Mendeley/2013/Marlow, Dabbish/Marlow, Dabbish\_2013\_Activity traces and signals in software developer recruitment and hiring.pdf:pdf},
isbn = {9781450313315},
keywords = {Hiring,Impression formation,Impression management,Open source software development,Transparency,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {145},
publisher = {ACM Press},
title = {{Activity traces and signals in software developer recruitment and hiring}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84874885595\&partnerID=tZOtx3y1},
year = {2013}
}
@article{Marlow2013a,
abstract = {In this paper we describe a qualitative investigation of impression formation in an online distributed software development community with social media functionality. We find that users in this setting seek out additional information about each other to explore the project space, inform future interactions, and understand the potential future value of a new person. They form impressions around other users' expertise based on history of activity across projects, and successful collaborations with key high status projects in the community. These impressions influence their receptivity to strangers' work contributions.},
author = {Marlow, Jennifer and Dabbish, Laura and Herbsleb, Jim},
doi = {10.1145/2441776.2441792},
file = {:Users/seocam/Documents/Mendeley/2013/Marlow, Dabbish, Herbsleb/Marlow, Dabbish, Herbsleb\_2013\_Impression Formation in Online Peer Production Activity Traces and Personal Profiles in GitHub.pdf:pdf},
isbn = {9781450313315},
journal = {Proceedings of the ACM Conference on Computer Supported Cooperative Work, CSCW},
keywords = {Activity traces,Collaborative software development,Impression formation,Peer production,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {117--128},
title = {{Impression Formation in Online Peer Production : Activity Traces and Personal Profiles in GitHub}},
url = {http://dl.acm.org.cyber.usask.ca/citation.cfm?doid=2441776.2441792},
year = {2013}
}
@inproceedings{McDonald2014,
abstract = {Open-source software (OSS) is software whose source code is available to view, change, and distribute without cost, and is typically developed in a collaborative manner that has captured the imagination of those who view the web as enabling more "democratic" models of governance. Researchers have, for years, debated the social structure of OSS projects - in particular, the extent to which they represent decentralized forms of organization. Many have argued that the significant concentration of code development responsibility raises doubts about whether the level of power-sharing truly qualifies as "distributed" in the way early observers predicted. This research will investigate how changes in the technology that supports these projects - specifically the greater visibility that characterizes the GitHub workspace may lead to a more broadly and quantifiably distributed leadership. Over the course of several studies employing several methodologies, it will examine leadership in OSS projects when visibility is a feature of the workspace.},
address = {New York, New York, USA},
author = {McDonald, Nora},
booktitle = {Proceedings of the 18th International Conference on Supporting Group Work - GROUP '14},
doi = {10.1145/2660398.2660435},
file = {:Users/seocam/Documents/Mendeley/2014/McDonald/McDonald\_2014\_Distributed Leadership in OSS.pdf:pdf},
isbn = {9781450330435},
keywords = {Distributed leadership,Open-source software,Social computing,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {261--262},
publisher = {ACM Press},
title = {{Distributed Leadership in OSS}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84911914502\&partnerID=tZOtx3y1},
year = {2014}
}
@inproceedings{Pham2013,
abstract = {Many software development projects struggle with creating and communicating a testing culture that is appropriate for the project's needs. This may degrade software quality by leaving defects undiscovered. Previous research suggests that social coding sites such as GitHub provide a collaborative environment with a high degree of social transparency. This makes developers' actions and interactions more visible and traceable. We conducted interviews with 33 active users of GitHub to investigate how the increased transparency found on GitHub influences developers' testing behaviors. Subsequently, we validated our findings with an online questionnaire that was answered by 569 members of GitHub. We found several strategies that software developers and managers can use to positively influence the testing behavior in their projects. However, project owners on GitHub may not be aware of them. We report on the challenges and risks caused by this and suggest guidelines for promoting a sustainable testing culture in software development projects. © 2013 IEEE.},
author = {Pham, Raphael and Singer, Leif and Liskin, Olga and Filho, Fernando Figueira and Schneider, Kurt},
booktitle = {2013 35th International Conference on Software Engineering (ICSE)},
doi = {10.1109/ICSE.2013.6606557},
file = {:Users/seocam/Documents/Mendeley/2013/Pham et al/Pham et al.\_2013\_Creating a shared understanding of testing culture on a social coding site.pdf:pdf},
isbn = {978-1-4673-3076-3},
issn = {02705257},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
month = may,
pages = {112--121},
publisher = {IEEE},
title = {{Creating a shared understanding of testing culture on a social coding site}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84886447408\&partnerID=tZOtx3y1},
year = {2013}
}
@inproceedings{Simpson2013,
abstract = {In this paper we describe the design and evaluation of Aduno, a shared workspace tool that allows distributed software teams to collaboratively establish and prioritize work items for the purposes of task management and planning during the design phase. Aduno is highly visual and real-time, offering features that are often lacking from other popular collaborative development tools. Aduno also links to Github's issue tracker and easily translates work items on a whiteboard to project work items. Here, we describe the concept and design of Aduno and present its initial evaluation. © 2013 IEEE.},
author = {Simpson, Braden and Kalliamvakou, Eirini and Lambert, Nathan and Damian, Daniela},
booktitle = {2013 6th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE)},
doi = {10.1109/CHASE.2013.6614751},
file = {:Users/seocam/Documents/Mendeley/2013/Simpson et al/Simpson et al.\_2013\_Aduno Real-time collaborative work design in a shared workspace.pdf:pdf},
isbn = {978-1-4673-6290-0},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
month = may,
pages = {141--144},
publisher = {IEEE},
title = {{Aduno: Real-time collaborative work design in a shared workspace}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84886771072\&partnerID=tZOtx3y1},
year = {2013}
}
@inproceedings{Thung2013,
abstract = {Social coding enables a different experience of software development as the activities and interests of one developer are easily advertised to other developers. Developers can thus track the activities relevant to various projects in one umbrella site. Such a major change in collaborative software development makes an investigation of networkings on social coding sites valuable. Furthermore, project hosting platforms promoting this development paradigm have been thriving, among which GitHub has arguably gained the most momentum. In this paper, we contribute to the body of knowledge on social coding by investigating the network structure of social coding in GitHub. We collect 100,000 projects and 30,000 developers from GitHub, construct developer-developer and project-project relationship graphs, and compute various characteristics of the graphs. We then identify influential developers and projects on this sub network of GitHub by using PageRank. Understanding how developers and projects are actually related to each other on a social coding site is the first step towards building tool supports to aid social programmers in performing their tasks more efficiently. © 2013 IEEE.},
author = {Thung, F. and Bissyande, T. F. and Lo, D.},
booktitle = {2013 17th European Conference on Software Maintenance and Reengineering},
doi = {10.1109/CSMR.2013.41},
file = {:Users/seocam/Documents/Mendeley/2013/Thung, Bissyande, Lo/Thung, Bissyande, Lo\_2013\_Network Structure of Social Coding in GitHub.pdf:pdf},
isbn = {978-0-7695-4948-4},
issn = {15345351},
keywords = {GitHub,Social coding,cscw,developer-developer network,project-project network,spb},
mendeley-tags = {cscw,spb},
month = mar,
pages = {323--326},
publisher = {IEEE},
title = {{Network Structure of Social Coding in GitHub}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84877252243\&partnerID=tZOtx3y1},
year = {2013}
}
@article{Tsay2012,
author = {Tsay, Jt and Dabbish, L and Herbsleb, J},
doi = {10.1145/2141512.2141583},
file = {:Users/seocam/Documents/Mendeley/2012/Tsay, Dabbish, Herbsleb/Tsay, Dabbish, Herbsleb\_2012\_Social media and success in open source projects.pdf:pdf},
isbn = {9781450310512},
journal = {CSCW conf.},
keywords = {cscw,spb},
mendeley-tags = {cscw,spb},
pages = {223--226},
title = {{Social media and success in open source projects}},
url = {http://dl.acm.org/citation.cfm?id=2141583},
year = {2012}
}
@inproceedings{Vasilescu2014,
abstract = {Software engineering is inherently a collaborative venture. In open-source software (OSS) development, such collaborations almost always span geographies and cultures. Because of the decentralised and self-directed nature of OSS as well as the social diversity inherent to OSS communities, the success of an OSS project depends to a large extent on the social aspects of distributed collaboration and achieving coordination over distance. The goal of this dissertation research is to raise our understanding of how human aspects (e.g., gender or cultural diversity), gamification and social media (e.g., participation in social environments such as Stack Overflow or GitHub) impact distributed collaboration in OSS. Copyright © 2014 ACM.},
address = {New York, New York, USA},
author = {Vasilescu, Bogdan},
booktitle = {Companion Proceedings of the 36th International Conference on Software Engineering - ICSE Companion 2014},
doi = {10.1145/2591062.2591091},
file = {:Users/seocam/Documents/Mendeley/2014/Vasilescu/Vasilescu\_2014\_Human aspects, gamification, and social media in collaborative software engineering.pdf:pdf},
isbn = {9781450327688},
keywords = {Collaborative software engineering,Open source,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {646--649},
publisher = {ACM Press},
title = {{Human aspects, gamification, and social media in collaborative software engineering}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84903577299\&partnerID=tZOtx3y1},
year = {2014}
}
@inproceedings{Vasilescu2014a,
abstract = {Open-source communities can be seen as knowledge-sharing ecosystems: participants learn from the community and from one another, and share their knowledge through contributions to the source code repositories or by o?ering support to users. With the emergence and growing popularity of social media sites targeting software developers (e.g., StackOverflow, GitHub), the paths through which knowledge flows within open-source software knowledge-sharing ecosystems are also beginning to change. My dissertation research seeks to raise our understanding of these changes.},
address = {New York, New York, USA},
author = {Vasilescu, Bogdan},
booktitle = {Proceedings of the companion publication of the 17th ACM conference on Computer supported cooperative work \& social computing - CSCW Companion '14},
doi = {10.1145/2556420.2556833},
file = {:Users/seocam/Documents/Mendeley/2014/Vasilescu/Vasilescu\_2014\_Software developers are humans, too!.pdf:pdf},
isbn = {9781450325417},
keywords = {Human aspects,Open-source,Software developers,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {97--100},
publisher = {ACM Press},
title = {{Software developers are humans, too!}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84898965442\&partnerID=tZOtx3y1},
year = {2014}
}
@article{Weber2012,
author = {Weber, Nicholas M.},
doi = {10.1002/meet.14504901347},
file = {:Users/seocam/Documents/Mendeley/2012/Weber/Weber\_2012\_Combined methods, thick descriptions Languages of collaboration on Github.pdf:pdf},
issn = {15508390},
journal = {Proceedings of the ASIST Annual Meeting},
keywords = {Collaborative work,Research methods,Social network analysis,cscw,spb},
mendeley-tags = {cscw,spb},
number = {1},
pages = {1--4},
title = {{Combined methods, thick descriptions: Languages of collaboration on Github}},
volume = {49},
year = {2012}
}
@article{West2012,
abstract = {As evidenced by SourceForge and GitHub, code repositories now integrateWeb 2.0 functionality that enables global par- ticipation with minimal barriers-to-entry. To prevent detri- mental contributions enabled by crowdsourcing, reputation is one proposed solution. Fortunately this is an issue that has been addressed in analogous version control systems such as the wiki for natural language content. The Wik- iTrust algorithm (“content-driven reputation”), while devel- oped and evaluated in wiki environments operates under a possibly shared collaborative assumption: actions that “sur- vive” subsequent edits are reflective of good authorship. In this paper we examine WikiTrust’s ability to measure author quality in collaborative code development. We first define amapping from repositories to wiki environments and use it to evaluate a production SVN repository with 92,000 updates. Analysis is particularly attentive to reputation loss events and attempts to establish ground truth using commit comments and bug tracking. A proof-of-concept evaluation suggests the technique is promising (about two-thirds of rep- utation loss is justified) with false positives identifying ar- eas for future refinement. Equally as important, these false positives exemplify differences in content evolution and the cooperative process between wikis and code repositories.},
author = {West, Andrew G. and Lee, Insup},
doi = {10.1145/2462932.2462950},
file = {:Users/seocam/Documents/Mendeley/2012/West, Lee/West, Lee\_2012\_Towards content-driven reputation for collaborative code repositories.pdf:pdf},
isbn = {9781450316057},
journal = {Proceedings of the Eighth Annual International Symposium on Wikis and Open Collaboration - WikiSym '12},
keywords = {code quality,code repository,content persistence,cscw,management,reputation,spb,svn,trust,wikis,wikitrust},
mendeley-tags = {cscw,spb},
pages = {2--5},
title = {{Towards content-driven reputation for collaborative code repositories}},
url = {http://dl.acm.org/citation.cfm?doid=2462932.2462950},
year = {2012}
}
@inproceedings{Wu2014,
abstract = {GitHub provides various social features for developers to collaborate with others. Those features are important for developers to coordinate their work (Dabbish et al., 2012; Marlow et al., 2013). We hypothesized that the social system of GitHub users was bound by system interactions such that contributing to similar code repositories would lead to users following one another on GitHub or vice versa. Using a quadratic assignment procedure (QAP) correlation, however, only a weak correlation among followship and production activities (code, issue, and wiki contributions) was found. Survey with GitHub users revealed an ecosystem on the Internet for software developers, which includes many platforms, such as Forrst, Twitter, and Hacker News, among others. Developers make social introductions and other interactions on these platforms and engage with one anther on GitHub. Due to these preliminary findings, we describe GitHub as a part of a larger ecosystem of developer interactions.},
address = {New York, New York, USA},
author = {Wu, Yu and Kropczynski, Jessica and Shih, Patrick C. and Carroll, John M.},
booktitle = {Proceedings of the companion publication of the 17th ACM conference on Computer supported cooperative work \& social computing - CSCW Companion '14},
doi = {10.1145/2556420.2556483},
file = {:Users/seocam/Documents/Mendeley/2014/Wu et al/Wu et al.\_2014\_Exploring the ecosystem of software developers on GitHub and other platforms.pdf:pdf},
isbn = {9781450325417},
keywords = {Ecosystem,Follow,GitHub,Social connection,cscw,spb},
mendeley-tags = {cscw,spb},
pages = {265--268},
publisher = {ACM Press},
title = {{Exploring the ecosystem of software developers on GitHub and other platforms}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84898980963\&partnerID=tZOtx3y1},
year = {2014}
}

@article{Crowston2012,
abstract = {We review the empirical research on Free/Libre and Open-Source Software (FLOSS) development and assess the state of the literature.We develop a framework for organizing the literature based on the input-mediatoroutput- input (IMOI) model from the small groups literature. We present a quantitative summary of articles selected for the review and then discuss findings of this literature categorized into issues pertaining to inputs (e.g., member characteristics, technology use, and project characteristics), processes (software development practices, social processes, and firm involvement practices), emergent states (e.g., social states and taskrelated states), and outputs (e.g. team performance, FLOSS implementation, and project evolution). Based on this review, we suggest topics for future research, as well as identify methodological and theoretical issues for future inquiry in this area, including issues relating to sampling and the need for more longitudinal studies.},
author = {Crowston, Kevin and Wei, Kangning and Howison, James and Wiggins, Andrea},
doi = {10.1145/2089125.2089127},
file = {:Users/seocam/Documents/Mendeley/2012/Crowston et al/Crowston et al.\_2012\_FreeLibre open-source software development.pdf:pdf},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {Computer-mediated communication,Development,Distributed work,Free/Libre open-source software,cscw,spb},
mendeley-tags = {cscw,spb},
month = feb,
number = {2},
pages = {1--35},
title = {{Free/Libre open-source software development}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-79955134463\&partnerID=tZOtx3y1},
volume = {44},
year = {2012}
}
